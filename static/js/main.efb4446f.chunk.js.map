{"version":3,"sources":["App.js","index.js"],"names":["App","useState","phone","email","invalidEmail","invalidPhone","data","setData","start","end","error","time","setTime","setInput","event","target","name","value","previousData","Navbar","bg","variant","expand","Container","Brand","href","className","Toggle","Collapse","id","Nav","Link","Card","Row","Col","md","Form","noValidate","onSubmit","preventDefault","length","isNaN","test","String","toLowerCase","d","Group","controlId","Label","InputGroup","hasValidation","Text","Control","required","type","placeholder","onChange","isInvalid","Feedback","step","e","initialValue","Button","xs","Array","from","map","_","idx","Img","src","width","height","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.efb4446f.chunk.js","sourcesContent":["import { useState } from 'react';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { Navbar, Container, Nav, Card, Form, Button, Row, Col, InputGroup } from \"react-bootstrap\";\nimport TimePicker from \"react-bootstrap-time-picker\";\n\nfunction App() {\n  const [data, setData] = useState({\n    phone: \"\",\n    email: \"\",\n    invalidEmail: false,\n    invalidPhone: false,\n  });\n  const [time, setTime] = useState({\n    start: 28800,\n    end: 32400,\n    error: \"\",\n  });\n\n  function validateEmail(email) {\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\"]+)*)|(\".+\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\n    return re.test(String(email).toLowerCase());\n  }\n\n  const setInput = (event) => {\n    const { name, value } = event.target;\n\n    setData(previousData => {\n      return {\n        ...previousData,\n        [name]: value,\n      }\n    });\n  }\n\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n\n    setData(previousData => {\n      return {\n        ...previousData,\n        invalidPhone: (data.phone.length > 10 || isNaN(data.phone)) ? true : false,\n        invalidEmail: !validateEmail(data.email),\n      }\n    });\n\n    setTime(d => {\n      return {\n        ...d,\n        error: (time.start >= time.end) ? \"Start time can't be greater than or equal to end time.\" : \"\",\n      }\n    });\n\n  }\n\n  return (\n    <>\n      <Navbar bg=\"primary\" variant=\"dark\" expand='lg' >\n        <Container>\n          <Navbar.Brand href=\"#home\" className=\"order-md-0 mx-auto order-1\">Navbar</Navbar.Brand>\n          <Navbar.Toggle className=\"order-md-0 order-0\" aria-controls=\"basic-navbar-nav\" />\n          <Navbar.Collapse id=\"basic-navbar-nav\" className=\"order-md-0 order-1\"> {/* For Hamburger button */}\n            <Nav className=\"me-auto\">\n              <Nav.Link href=\"#home\">Home</Nav.Link>\n              <Nav.Link href=\"#features\">Features</Nav.Link>\n              <Nav.Link href=\"#pricing\">Pricing</Nav.Link>\n            </Nav>\n          </Navbar.Collapse>\n        </Container>\n      </Navbar>\n\n      <Container>\n        <Card className=\"p-3 mt-5\">\n          <Row>\n            <Col md>\n              <Form noValidate onSubmit={handleSubmit}>\n                <Form.Group className=\"mb-3\" controlId=\"phone\">\n                  <Form.Label>Phone</Form.Label>\n                  <InputGroup hasValidation>\n                    <InputGroup.Text>+91</InputGroup.Text>\n                    <Form.Control\n                      required type=\"tel\"\n                      placeholder=\"98XXXXXXXX\"\n                      onChange={setInput}\n                      name=\"phone\"\n                      value={data.phone}\n                      isInvalid={data.invalidPhone}\n                    />\n                    <Form.Control.Feedback type=\"invalid\">Please enter a valid number.</Form.Control.Feedback>\n                  </InputGroup>\n                </Form.Group>\n\n                <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control\n                    required\n                    type=\"email\"\n                    placeholder=\"example@mail.com\"\n                    onChange={setInput}\n                    value={data.email}\n                    name=\"email\"\n                    isInvalid={data.invalidEmail}\n                  />\n                  <Form.Control.Feedback type=\"invalid\">Please enter a valid email.</Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group>\n                  <Row className=\"my-3\">\n                    <Col>\n                      <Form.Label>Start Time</Form.Label>\n                      <TimePicker\n                        start=\"8:00\"\n                        end=\"22:00\"\n                        step={60}\n                        name=\"start\"\n                        onChange={(e) => { setTime(d => { return { ...d, start: e } }) }}\n                        value={time.start}\n                        isInvalid={time.error}\n                      />\n                    </Col>\n                    <Col>\n                      <Form.Label>End Time</Form.Label>\n                      <TimePicker\n                        initialValue=\"9:00\"\n                        start=\"8:00\"\n                        end=\"22:00\"\n                        step={60}\n                        name=\"endTime\"\n                        onChange={(e) => { setTime(d => { return { ...d, end: e } }) }}\n                        value={time.end}\n                        isInvalid={time.error}\n                      />\n                    </Col>\n                    <div className=\"text-danger\" type=\"invalid\">{time.error}</div>\n                  </Row>\n                </Form.Group>\n\n                <Button className=\"mb-3\" variant=\"primary\" type=\"submit\"> Submit </Button>\n              </Form>\n            </Col>\n            <Col md>\n              <Row xs={1} md={2} className=\"g-4\">\n                {Array.from({ length: 4 }).map((_, idx) => (\n                  <Col>\n                    <Card>\n                      <Card.Img variant=\"top\" src=\"https://picsum.photos/200/150?dark\" width=\"200px\" height=\"150px\" />\n                    </Card>\n                  </Col>\n                ))}\n              </Row>\n            </Col>\n          </Row>\n        </Card>\n      </Container>\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}